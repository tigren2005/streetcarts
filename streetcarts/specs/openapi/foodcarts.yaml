swagger: '2.0'
info:
  version: '1.0'
  description: Manage food carts.
  title: Food Carts API
basePath: /v1/streetcarts
host: org_name-env.apigee.net
schemes:
  - https
paths:
  '/foodcarts':
    get:
      description: View all food carts.
      operationId: GetFoodCarts
      produces:
        - application/json
      parameters: 
        - name: x-api-key
          in: header
          description: 'Consumer key for the registered developer application.'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/foodcarts'
    post:
      description: Create a food cart.
      operationId: CreateFoodCart
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 'Pass the access token returned when the user was authenticated as <code>Bearer <i>access-token</i></code>.'
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Details for the food cart.
          schema:
            $ref: '#/definitions/foodcartDetails'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/foodcart'
  '/foodcarts/{cart_id}':
    get:
      description: View food cart details.
      operationId: GetFoodCartByID
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
        - name: x-api-key
          in: header
          description: 'Consumer key for the registered developer application.'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/foodcart'
    put:
      description: Update food cart details.
      operationId: UpdateFoodCart
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          required: true
          description: ID of the food cart.
          type: string
        - name: Authorization
          in: header
          description: 'Pass the access token returned when the user was authenticated as <code>Bearer <i>access-token</i></code>.'
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Details to update for the food cart.
          schema:
            $ref: '#/definitions/foodcartDetails'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/foodcart'
    delete:
      description: Delete a food cart.
      operationId: DeleteFoodCart
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 'Pass the access token returned when the user was authenticated as <code>Bearer <i>access-token</i></code>.'
          required: true
          type: string
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/foodcart'
  '/foodcarts/{cart_id}/menus':
    get:
      description: View the menus associated with a food cart.
      operationId: GetFoodCartMenus
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
        - name: x-api-key
          in: header
          description: 'Consumer key for the registered developer application.'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/menus'
    post:
      description: Add a menu to a food cart.
      operationId: CreateFoodCartMenu
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
        - name: Authorization
          in: header
          description: 'Pass the access token returned when the user was authenticated as <code>Bearer <i>access-token</i></code>.'
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Name of the menu.
          schema:
            $ref: '#/definitions/menuName'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/menu'
  '/foodcarts/{cart_id}/items':
    get:
      description: View menu items associated with a food cart.
      operationId: GetFoodCartMenuItems
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
        - name: x-api-key
          in: header
          description: 'Consumer key for the registered developer application.'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/items'
    post:
      description: Create a menu item to a food cart.
      operationId: CreateFoodCartMenuItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: ID of the food cart.
          required: true
          type: string
        - name: Authorization
          in: header
          description: 'Pass the access token returned when the user was authenticated as <code>Bearer <i>access-token</i></code>.'
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: Details for the menu item.
          schema:
            $ref: '#/definitions/itemDetails'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/item'
definitions:
  foodcarts:
    type: array
    description: List of food carts.
    items:
      properties:
        cartname:
          type: string
          description: Name of the food cart.
        uuid:
          type: string
          description: ID of the food cart.
  foodcart:
    description: Food cart details.
    properties:
      cartName:
        type: string
        description: Name of the food cart.
      description:
        type: string
        description: Description of the food cart.
      hours:
        type: string
        description: Hours of operation.
      location:
        properties:
          latitude:
            type: string
            description: Latitude of the food cart. Required for locating the cart in mapping apps.
          longitude:
            type: string
            description: Longitude of the food cart. Required for locating the cart in mapping apps.
      ownerID:
        type: string
        description: ID of the owner of the food cart.
      phone:
        type: string
        description: Phone number for the food cart.
      url:
        type: string
        description: URL of the food cart.
      uuid:
        type: string
        description: ID of the food cart.
  foodcartDetails:
    type: object
    properties:
      cartName:
        type: string
        description: Name of the food cart.
      description:
        type: string
        description: Description of the food cart.
      hours:
        type: string
        description: 'Hours of operation. For example: Monday through Saturday: 9-6, Closed Sunday.'
      location:
        properties:
          address:
            type: string
            description: Mailing address for the food cart.
          city:
            type: string
            description: City where the food cart is located.
          region:
            type: string
            description: State or region where the food cart is located.
          country:
            type: string
            description: Country where the food cart is located.
          postalCode:
            type: string
            description: Postal code for the food cart.
          latitude:
            type: string
            description: Latitude of the food cart. Required for locating the cart in mapping apps.
          longitude:
            type: string
            description: Longitude of the food cart. Required for locating the cart in mapping apps.
          shortAddress:
            type: string
            description: 'Short description of the food cart location, including landmarks.'
      phone:
        type: string
        description: Phone number for the food cart.
      url:
        type: string
        description: URL of the food cart.
  menus:
    type: array
    description: List of menus.
    items:
      $ref: '#/definitions/menu'
  menuName:
    required:
      - menuName
    properties:
      menuName:
        type: string
        description: Name of the menu.
  menu:
    properties:
      cartID:
        description: ID of the food cart.
        type: string
      menuName:
        type: string
        description: Name of the menu.
      uuid:
        description: ID of the menu.
        type: string
  items:
    type: array
    description: List of menu items.
    items:
      $ref: '#/definitions/item'
  item:
    description: Menu item details.
    properties:
      cartID:
        type: string
        description: ID of the food cart.
      description:
        type: string
        description: Description of the menu item.
      itemName:
        type: string
        description: Name of the menu item.
      price:
        type: number
        description: Price of the menu item.
      uuid:
        type: string
        description: ID of the menu item.
  itemDetails:
    properties:
      description:
        type: string
        description: Description of the menu item.
      itemName:
        type: string
        description: Name of the menu item.
      price:
        type: string
        description: Price of the menu item.
